Stripe documentation
===================================
This will go over how to use Stripe in general, but also how to use it with Next.js and Micro(Carey will go over Micro)

To start of you will ned to create an account
- once the account is created you will have access to the keys
- there are two keys Publishable and Secret
    - Publishable API keys are meant solely to identify your account with Stripe,
    they aren’t secret. In other words, they can safely be published in places 
    like your Stripe.js JavaScript code, or in an Android or iPhone app. Publishable
    keys only have the power to create tokens.
    - Secret API keys should be kept confidential and only stored on your own servers.
     Your account’s secret API key can perform any API request to Stripe without restriction.

    If you use heroku deployment make sure to put these keys into the var configs. 
    *** Use only your test API keys for testing and development. This ensures that you don't
        accidentally modify your live customers or charges.

To install the stripe API run
    -- npm install stripe


    *** and if you are using react use the npm
    -- npm install react-stripe-checkout (This will allow you to use the Stripe components)
            --Check out for info:  https://www.npmjs.com/package/react-stripe-checkout
        *** Requires babel for compiling. If anyone is having issues with that, open an issue 
            and I'll do my best to better document the build process.
                Ex. *** token and stripeKey are the only required props, everything else is 
                        optional as per the stripe docs. See Checkout Docs. All props go through
                        simple validation and are passed to stripe checkout, they're also documented
                        in StripeCheckout.js.
                    
            This will give you a default Stripe-style button which looks like this:

                import React from 'react'
                import StripeCheckout from 'react-stripe-checkout';
                
                export default class TakeMoney extends React.Component {
                onToken = (token) => {
                    fetch('/save-stripe-token', {
                    method: 'POST',
                    body: JSON.stringify(token),
                    }).then(response => {
                    response.json().then(data => {
                        alert(`We are in business, ${data.email}`);
                    });
                    });
                }
                // ...
                render() {
                    return (
                    // ...
                    <StripeCheckout
                        token={this.onToken}
                        stripeKey="my_PUBLISHABLE_stripekey"
                    />
                    )
                }
                }

                <StripeCheckout
                name="Title of app" // the pop-in header title
                description="$5 for 5 credits" // the pop-in header subtitle
                token={this.onToken}
                amount={500} // cents
                currency="USD"
                stripeKey="copy and paste your key"
                 />

Here is a flow of how stripe will work between the front end and the backend
    just say we are using a credits system where users will buy credits inorder to 
    create a quiz on our webapp.
        -User will click add credits
                    |
        -Tell strip to show a credit card form
                    |
        -User enters credit card details
                    |
        -Details sent directly from the form to stripe  
                    |
        -Stripe sends back a token representing the charge made to the card
                    |
        -We send the token to our API   
                    |
        -Our API confirms the charge was successful with stripe 
                    |
        -Add credits to the users account

